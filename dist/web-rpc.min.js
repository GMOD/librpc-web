!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.WebRPC=e()}(this,function(){"use strict";var t=function(){this.events=Object.create(null)};function a(t,e){if(void 0===e&&(e=[]),t instanceof ArrayBuffer)e.push(t);else if(o=t,Object(o)===o)for(var r in t)a(t[r],e);var o;return e}t.prototype.on=function(t,e){var r=this.events[t];return r||(r=[],this.events[t]=r),r.push(e),this},t.prototype.off=function(t,e){var r=this.events[t];if(r){var o=r.indexOf(e);-1!==o&&r.splice(o,1)}return this},t.prototype.emit=function(t,e){var r=this.events[t];if(r)for(var o=0;o<r.length;o++)r[o](e);return this};var e=function(r){function t(t){var e=t.workers;r.call(this),this.workers=[].concat(e),this.idx=0,this.calls={},this.timeouts={},this.errors={},this.handler=this.handler.bind(this),this.listen()}return r&&(t.__proto__=r),((t.prototype=Object.create(r&&r.prototype)).constructor=t).prototype.listen=function(){var e=this;this.workers.forEach(function(t){return t.addEventListener("message",e.handler)})},t.prototype.handler=function(t){var e=t.data,r=e.error,o=e.method,i=e.eventName,n=e.data,s=e.uid;r?this.reject(s,r):o?this.resolve(s,n):i&&this.emit(i,n)},t.prototype.reject=function(t,e){this.errors[t]&&(this.errors[t](new Error(e)),this.clear(t))},t.prototype.resolve=function(t,e){this.calls[t]&&(this.calls[t](e),this.clear(t))},t.prototype.clear=function(t){clearTimeout(this.timeouts[t]),delete this.timeouts[t],delete this.calls[t],delete this.errors[t]},t.prototype.call=function(r,o,t){var i=this;void 0===t&&(t={});var n=t.timeout;void 0===n&&(n=2e3);var s=Math.floor(1e10*(1+Math.random())).toString(16),h=a(o);return new Promise(function(t,e){i.timeouts[s]=setTimeout(function(){return i.reject(s,'Timeout exceeded for RPC method "'+r+'"')},n),i.calls[s]=t,i.errors[s]=e,i.workers[i.idx].postMessage({method:r,uid:s,data:o},h),i.idx=++i.idx%i.workers.length})},t}(t),r=function(t){this.methods=t,this.listen()};return r.prototype.listen=function(){self.addEventListener("message",this.handler.bind(this))},r.prototype.handler=function(t){var e=this,r=t.data,o=r.method,i=r.uid,n=r.data;this.methods[o]?Promise.resolve(n).then(this.methods[o]).then(function(t){return e.reply(i,o,t)},function(t){return e.throw(i,String(t))}):this.throw(i,'Unknown RPC method "'+o+'"')},r.prototype.reply=function(t,e,r){var o=a(r);self.postMessage({uid:t,method:e,data:r},o)},r.prototype.throw=function(t,e){self.postMessage({uid:t,error:e})},r.prototype.emit=function(t,e){self.postMessage({eventName:t,data:e})},{Client:e,Server:r}});
